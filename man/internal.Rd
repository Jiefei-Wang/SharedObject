% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/resourcesManager.R, R/sharedObject-method.R
\name{.removeObject}
\alias{.removeObject}
\alias{.getProperty}
\alias{.setProperty}
\title{Internal functions}
\usage{
.removeObject(dataId)

.getProperty(x, property)

.setProperty(x, property, value)
}
\arguments{
\item{dataId}{A vector of numeric numbers. The keys of shared objects}

\item{x}{A shared object}

\item{property}{Character, the name of the property}

\item{value}{The new value of the property}
}
\value{
.removeObject: no return value

.getProperty: The property of a shared vector or
a list of properties of a data.frame

.setProperty: No return value
}
\description{
Internal functions
}
\details{
.removeObject: This function will delete the data associated with the key
provided by the argument \code{dataId}. Any try to read the data after the
function call might crash R. If \code{dataId} is set to "all",
the function will delete all data. This function is for the case where
R is terminated abnormally without clearing the shared memory. In normal
case, R's garbage collector will free the shared memory and there is no
need to call this function.

.getProperty: This function returns a proporty of a shared object.
The available properties are \code{dataId},\code{typeName},\code{ownData},\code{processId},
\code{typeId},\code{length},\code{totalSize},\code{copyOnWrite},\code{sharedSubset},\code{sharedCopy},
\code{setCopyOnWrite},\code{setSharedSubset} and \code{setSharedCopy}.

\code{.setProperty}: Set a property of a shared object.
}
\examples{
## Create a shared object
A = share(1:10)
## Get the ID of the shared object
id = .getProperty(A, "dataId")
## Delete the data associated with the ID
.removeObject(id)
## Accessing the variable will cause an error since its
## data has been deleted.
\dontrun{
A
}
}
